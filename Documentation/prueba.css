/*selecciono por nombre de elementos en css

* es un selector universal

por elemento h1, h2, etc (por tipos de elemento). ultimo de jerarquia

Por clase, crear una clase y agregar atributo a el js.

Por ID, especifico a un objeto en particular, no mas de uno (prioridad sobre clases, pseudoclases y atributos) 

Por atributo, creas categoria, parrafos=1, se selecciona por corchetes y se iguala
para escoger por ese selector.

seleccionar por descendencia, p dentro de h2 por ejemplo, o el usual img dentro de clase
mas grande.

pseudo-clases: hacerlo por condiciones, ejemplo: clase:hover haria un condicional para
hacer cambios asociados a eso.

style desde html le gana a todo lo de css, por ultimo !important le gana a todo, hace un cambio universal

:first child to select specific section, nth-child(n)

--active para seleccionar elemento especifico y hacerle cambios a ese

metodologia BEM no cambia nada, es por mantener estructura cohesiva, clase__pseudoclase-elemento especifico

padding, inner space an element has and margin is whitspace around the element (outside padding)

margin is for space between elements, padding is for internal space between its own border.

outline no toma espacio border sí
font size tamaño

font family tipografia

line height mas espacio espacio de linea, aumenta igualmente hacia arriba y abajo (tamaño letra no cambia
solo lo que llena en la linea su contenedor

font weight bold or light

font stretch, literally expands text, sounds cool

font variant cambia estilos de textos, quiza hay alguno curioso pero meh

normalize, archivo para mantener web consistente entre browsers

Dependiendo del tag que ponga en html tienen tamaños de caja determinados
h2 en predeterminado cubre todo y b, p, i, etc secciones particulares

propiedades de caja:
backround color, fondo de caja

different types of border styles, look up

box shadow to intensify presence, can add text shadow aswell

transform, rotate can turn in x axis

position static, non affected by other elements as if didnt existed

position: relative, se acomoda respecto a su posicionamiento normal del document flow

opacity, kinda see through

position absolute, segun objeto padre mas cercano si no hay, pantalla

fixed: segun pantalla, se queda ahi sin importar incluso movimientos de pantalla

sticky: moves with scrolling until specific point, then becomes fixed, cool falling animations
or headers that become still after crossing section

Display: block, completo el ancho como un header
inline, solo lo que cubre el objeti como tal
inline block cubre lo que pueda hasta chocar contra un elemento

overflow visible, no cambia nada, auto hace que no se sobresalga, scroller
scroll obliga a scrollear en a
/*selecciono por nombre de elementos en css

* es un selector universal

por elemento h1, h2, etc (por tipos de elemento). ultimo de jerarquia

Por clase, crear una clase y agregar atributo a el js.

Por ID, especifico a un objeto en particular, no mas de uno (prioridad sobre clases, pseudoclases y atributos) 

Por atributo, creas categoria, parrafos=1, se selecciona por corchetes y se iguala
para escoger por ese selector.

seleccionar por descendencia, p dentro de h2 por ejemplo, o el usual img dentro de clase
mas grande.

pseudo-clases: hacerlo por condiciones, ejemplo: clase:hover haria un condicional para
hacer cambios asociados a eso.


style desde html le gana a todo lo de css, por ultimo !important le gana a todo, hace un cambio universal

:first child to select specific section

--active para seleccionar elemento especifico y hacerle cambios a ese

metodologia BEM no cambia nada, es por mantener estructura cohesiva, clase__pseudoclase-elemento especifico

padding, inner space an element has and margin is whitspace around the element (outside padding)

margin is for space between elements, padding is for internal space between its own border.

outline no toma espacio border sí
font size tamaño

font family tipografia

line height mas espacio espacio de linea, aumenta igualmente hacia arriba y abajo (tamaño letra no cambia
solo lo que llena en la linea su contenedor

font weight bold or light

font stretch, literally expands text, sounds cool

font variant cambia estilos de textos, quiza hay alguno curioso pero meh

normalize, archivo para mantener web consistente entre browsers

Dependiendo del tag que ponga en html tienen tamaños de caja determinados
h2 en predeterminado cubre todo y b, p, i, etc secciones particulares

propiedades de caja:
backround color, float para que seccion rodee otro elemento y se acomode respecto a el dejando 
un espacio sin inperponerse

pseudo elementos: hace cambios visibles pero no afecta el layout, como outline

first:line, editar solo primera linea de un parrafo
first:letter
place:holder 
input:: placeholder, adaptar texto de ejemplo de caja de texto
:: selection,al seleccionar texto cambia estilo 
Hijos de elemento al que se le aplica el pseudoelemento::after
:: after hace como lo mismo pero para despues del elemento
:: before, es como si no existiera, solo es visible

pseudo clases: 
:hover when mouse over effect happens
transition: does changes establshed in pseudoclass for x amount of seconds
:link color de link
:visited si ya lo he visto queda de otro color
:active mientras apretamos funciona
:focus when you click and is selected changes to focus
lang:"en" para seleccionar secciones en un idioma

object fit: cover, se ajusta a contenedor, contain tamaño original, object-position: acomoda imagen a direcciones respecto al borde

cursor allow to change when in certain area, test different cursors w3schools

Flexbox: se comporta como un contenedor normal (bloque), lo de adentro cambia
main axis: x, main start izquierda del main axis, main-end otro lado
cross axis: y, cross start arriba del cross axis, main-end otro lado

display:flex no cambia nada directamente, si dentro de flexbox hay 2 divs, cajas se adaptan al contenedor
y segun contenido se ponen junto a la otra con la misma altura (reactivas a entorno)

Flex-Direction: (cambiar direccion main axis), row, column, reverse main axis invierte direccion

Flex-wrap para mover cajas abajo si se pasa de la distancia horizontal

Justify content, center, se centra el contenido tal cual, space around crea espacios simetricos entre cajas
margin auto lo hace con el contenido y el space around lo hace con el contenedor, space between, maxima cantidad de espacio entre cajas pero se aplica de ambos lados (duplica entre cajas)
space-evenly, simetria entre todo

align-items: center centra todo en la pantalla (dentro de un contenedor), flex-end, final de contenedor,
flex-start acomoda al minimo, strech se extiende por todo el cross axis

align-content: para varias rows y columns, items solo para filitas
para items si queremos que vaya de abajo a arriba al disminuir tamaño pantalla usamos baseline

Items properties: align self: para ajustar por colores(self revisa caracteristicas y adapta elementos segun ellas)
flex-grow: divide una seccion de espacio por cada una de las cajas para cada una (hace que sea flexible el espacio y lo reparte entre cajas)
flex-shrink: flex shrink hace lo de flex grow pero cediendo contenido a cajas en especifico
flex-basis: da mas importancia a tamaño definido sobre el width (tamaño base)
flex: (all in one)
order: como z index pero en el main axis, cual tiene prioridad para ir al inicio del main axis

Grid: display:grid, grid-template-rows/columns, puedo poner algunas columnas con dimensiones fijas y otras que se adaptan a la pantalla (fr por ejemplo)
grid gap pone espacio entre items (puedo poner gaps entre column o row), grid column/row to decide span of item 1/3 1 to 3
I can also write as -start and -end for grid-column/row or span 2, can use repeat(3,150),1fr, same thing as writing 3 times same thing

Implicit and explicit grid